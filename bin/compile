#!/bin/sh

##
# usage: bin/compile <build-dir> <cache-dir>

indent() {
  sed -u 's/^/       /'
}

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit

APP_NAME=$(grep "app: \(:\)" ${build}/mix.exs | cut -d ":" -f 3 | cut -d "," -f 1)
APP_PATH=${build}/${APP_NAME}
DEFAULT_OTP_VERSION="master"
if [ -f ${build}/.preferred_otp_version ]; then
  OTP_VERSION=$(cat ${build}/.preferred_otp_version)
fi
erl_ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
erl_tarball=${erl_ver}.tgz
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-erlang/${erl_tarball}"
ERLROOT=${build}/otp

DEFAULT_ELIXIR_VERSION="master"
if [ -f ${build}/.preferred_elixir_version ]; then
  ELIXIR_VERSION=$(cat ${build}/.preferred_elixir_version)
fi
ex_ver=${ELIXIR_VERSION:=${DEFAULT_ELIXIR_VERSION}}
ex_tarball=${ex_ver}.tar
ELIXIR_TARBALL_URL="https://github.com/elixir-lang/elixir/tarball/${ex_ver}"

mkdir ${APP_PATH}
for file in ${build}/* ${build}/.*; do
  test "$file" != "$APP_PATH" &&
    test "$file" != "${build}/Procfile" &&
    test "$file" != "${build}/." &&
    test "$file" != "${build}/.." &&
    mv "$file" "$APP_PATH/";
done

PREBUNDLED_URL="https://s3-ap-southeast-2.amazonaws.com/syd-ex-builtpack/app.tar.gz"

echo "-----> Downloaded prebundled Elixir"

(
  set -e
  test -f ${cache}/app.tar.gz && exit
	cd ${cache}
	curl -sO ${PREBUNDLED_URL} || exit 1
)

echo "-----> Unpacking prebundled Elixir"
tar -zxf ${cache}/app.tar.gz -C ${build}
PATH=/app/otp/bin:$PATH
PATH=/app:$PATH
PATH=/app/ex/bin:$PATH

cd ${APP_PATH}

echo "-----> Building with Mix"
unset GIT_DIR

echo "-----> Bundling dependencies"
MIX_ENV=prod mix deps.get 2>&1 | indent

echo "-----> Compiling app"
MIX_ENV=prod mix compile 2>&1 | indent

mkdir ${build}/.profile.d
echo "cd /app/${APP_NAME}" > ${build}/.profile.d/path.sh
